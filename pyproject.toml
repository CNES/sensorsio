[build-system]
requires = ["hatchling","hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "sensorsio"
dynamic = ["version"]
description = "Conventient functions to load remote sensing data to numpy and xarray"
readme = "README.md"
license = "Apache-2.0 OR LGPL-3.0"
requires-python = ">= 3.10"
authors = [
    { name = "Julien Michel", email = "julien.michel@cnes.fr" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
]
dependencies = [
    "affine>=2.4.0",
    "boto3>=1.34.149",
    "fiona>=1.9.6,<2",
    "geopandas>=1.0.1",
    "hatch>=1.12.0",
    "h5py>=3.11.0",
    "importlib-metadata>=8.2.0",
    "mgrs>=1.5.0",
    "numpy>=2",
    "pandas>=2.2.2",
    "pandas-stubs>=2.2.2.240603",
    "pyhdf>=0.11.4",
    "pyproj>=3.6.1",
    "pyresample>=1.28.4",
    "rasterio>=1.3.10",
    "scikit-learn>=1.5.1",
    "scipy>=1.14.0",
    "utm>=0.7.0",
    "xarray>=2024.6.0",
    "pybind11>=2.12",
]

[project.optional-dependencies]
notebook = [
    "ipykernel>=6.29.5",
    "matplotlib>=3.9.1",
    "notebook>=7.2.1",
]
testing = [
    "pytest>=8.3.2",
    "pytest-cov>=5.0.0",
]
doc = [
    "sphinx>=7.4.7",
    "sphinx_rtd_theme>=2.0.0",
    "sphinx_mdinclude>=0.6.2",
    "nbsphinx>=0.9.5",
    "nbsphinx-link>=1.3.1",
]
dev = [
    "hatch>=1.12.0",
    "hatchling>=1.25.0",
    "mypy>=1.11.2",
    "pylint>=3.2.7",
    "pre-commit>=3.8.0",
]

[project.urls]
Homepage = "https://framagit.org/jmichel-otb/sensorsio"

[tool.hatch.version]
source = "vcs"
[tool.hatch.version.raw-options]
version_scheme = "no-guess-dev"


[tool.hatch.build.targets.sdist]
include = [
    "/src",
]

[tool.pytest.ini_options]
markers = [
	"requires_test_data: Requires the SENSORSIO_TEST_DATA_PATH environment variable to set to the sensorsio test dataset folder",
	"requires_worldclim_data: Requires the SENSORSIO_WORLDCLIM_PATH environment variable to be set" ]
addopts = [
    "--verbose" ]
norecursedirs = [
    "dist",
    "build",
    ".tox" ]
testpaths = "tests"
pythonpath = "src"

[tool.flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
exclude = [
    ".tox",
    "build",
    "dist",
    ".eggs",
    "docs/conf.py" ]
extend_ignore = [
    "E203",
    "W503" ]
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black

[tool.mypy]
python_version = 3.10
warn_return_any = true
no_implicit_optional = true
exclude = ["yapf*"]

[[tool.mypy.overrides]]
module = "mypy-config,mypy-numpy.*,mypy-rasterio.*,mypy-geopandas.*"
ignore_missing_imports = true
